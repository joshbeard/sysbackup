# Example configuration for 'sysbackup'.
#
# Copy this to a new file and specify it with the '-c' or '--config' argument.

# Address of the host to backup to/from
bk_host="192.168.1.120"

# Remote user
# If pulling, this user should have read rights to the data being pulled
# If pushing, beware that ownership and ACLs won't be preserved (unless
#   remote user is root [bad idea])
bk_user="remoteuser"

# Path to backup to (local or remote)
bk_path="/data/backups"

# Path to SSH key to use
ssh_key="/home/sysbackup/.ssh/id_rsa"

# Arguments to pass to SSH (also used in the rsync command)
ssh_args="-F /home/sysbackup/.ssh/config -q -i $ssh_key"

### Rsync Options ###
# Don't pass the (-e) here, as it will be added below
# The following is an example of specifying the rsync path on the remote machine
#rsync_args="-avzXA --progress --stats --rsync-path=\"/usr/bin/sudo /usr/bin/rsync\""
rsync_args="-avXA --progress --stats"
# The path to the rsync binary on this machine
rsync_bin="/usr/bin/rsync"
# The full path to an optional filter file
rsync_filter="/etc/sysbackup/filter.txt"

# 0 = pull from the remote host
# 1 = push to the remote host
backup_method=0

# Check if the host is up via ICMP (ping 3 times)
check_if_up=1

# Log file. Leave empty to disable
log_file="/var/log/sysbackup.log"
log_date_fmt="+%F %T: "

# E-mail report
# Leave empty to disable
mail_to="me@mydomain.tld"
mail_only_errors=1

# Verbose shows what commands are being executed
verbose=1

# Array of paths to backup
# You can use "/" to backup the entire system
# If you choose "/", the backup name will be $bk_host.root
data_locs=(
"/svr/important_data"
"/etc"
"/home"
)


# Maximum age (in days) to keep backups
max_age=20

# Have at least this much free space before backing up (in megabytes)
min_free_space=1024 # in MegaBytes

# Format for date (the backups are named with this. See man date)
date_fmt="+%Y-%m-%d-%H-%M"

# Full path to a PID file we can use
pid_file="/tmp/backups.pid"

# Should we try to calculate free space on the destination before backing up?
# This doesn't work that well, and does take time to calculate.
# It requires SSH access to check the remote system's available space
# You'll also need to specify a backup_file_list so we can determine the backup size from that
calculate_free_space=1
#backup_file_list=$(mktemp /tmp/backup.$(date $date_fmt).XXX || exit 1)
#free_padding=200

i_have_configured=0


